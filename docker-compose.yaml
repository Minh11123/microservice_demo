version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservice_system
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservice_system
  order_service:
    build: ./order_service
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    networks:
      - microservice_system
  payment_service:
    build: ./payment_service
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    networks:
      - microservice_system
  inventory_service:
    build: ./inventory_service
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    networks:
      - microservice_system
  job_service:
    build: ./job_service
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    networks:
      - microservice_system
  gateway_service:
    build: ./gateway_service
    depends_on:
      - kafka
    ports:
      - "8088:8088"
    networks:
      - microservice_system
  authen_service:
    build: ./Authen_service
    depends_on:
      - kafka
    ports:
      - "8888:8888"
    networks:
      - microservice_system
  customer_service:
    build: ./customer_service
    depends_on:
      - kafka
    ports:
      - "8085:8082"
    networks:
      - microservice_system
  refund_service:
    build: ./refund_service
    depends_on:
      - kafka
    ports:
      - "8084:8084"
    networks:
      - microservice_system
  discovery_service:
    build: ./discovery_service
    ports:
      - "8761:8761"
    networks:
      - microservice_system
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - order_service
      - payment_service
      - inventory_service
      - job_service
      - gateway_service
      - authen_service
      - customer_service
      - refund_service
      - discovery_service
    networks:
      - microservice_system
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - microservice_system
networks:
  microservice_system:
    driver: bridge
