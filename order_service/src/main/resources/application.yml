server:
  port: 8080


spring:
  datasource:
    url: jdbc:mysql://192.168.2.182:3306/order_service?createDatabaseIfNotExist=true
    username: root
    password: Abc123456789@
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
  application:
    name: order-service
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: order-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
#
#
eureka:
  client:
    serviceUrl:
      defaultZone: http://192.168.2.182:8761/eureka
    register-with-eureka: true
    fetch-registry: true
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#spring.application.name=microservice-demo


